Resources:
  HostingBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ${self:service}-${self:custom.stage}-hosting
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
      # Set the CORS policy
      CorsConfiguration:
        CorsRules:
          -
            AllowedOrigins:
              - '*'
            AllowedHeaders:
              - '*'
            AllowedMethods:
              - GET
              - PUT
              - POST
              - DELETE
              - HEAD
            MaxAge: 3000

  HostingBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource:
              Fn::Join:
                - ''
                -
                  - 'arn:aws:s3:::'
                  - 
                    Ref: HostingBucket
                  - /*
      Bucket:
        Ref: HostingBucket

  AttachmentsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ${self:service}-${self:custom.stage}-attachments
      # Set the CORS policy
      CorsConfiguration:
        CorsRules:
          -
            AllowedOrigins:
              - '*'
            AllowedHeaders:
              - '*'
            AllowedMethods:
              - GET
              - PUT
              - POST
              - DELETE
              - HEAD
            MaxAge: 3000

# Print out the name of the bucket that is created
Outputs:
  AttachmentsBucketName:
    Value:
      Ref: AttachmentsBucket

  HostingBucketName:
    Value:
      Ref: HostingBucket